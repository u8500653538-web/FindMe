// Mocks generated by Mockito 5.4.6 from annotations
// in findme_programmazione_mobile/test/widget_test/comment_page_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i4;

import 'package:cloud_firestore/cloud_firestore.dart' as _i2;
import 'package:findme_programmazione_mobile/services/database.dart' as _i3;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: deprecated_member_use
// ignore_for_file: deprecated_member_use_from_same_package
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: must_be_immutable
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class
// ignore_for_file: invalid_use_of_internal_member

class _FakeQuerySnapshot_0<T extends Object?> extends _i1.SmartFake
    implements _i2.QuerySnapshot<T> {
  _FakeQuerySnapshot_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeDocumentSnapshot_1<T extends Object?> extends _i1.SmartFake
    implements _i2.DocumentSnapshot<T> {
  _FakeDocumentSnapshot_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [DatabaseMethods].
///
/// See the documentation for Mockito's code generation for more information.
class MockDatabaseMethods extends _i1.Mock implements _i3.DatabaseMethods {
  MockDatabaseMethods() {
    _i1.throwOnMissingStub(this);
  }

  @override
  _i4.Future<dynamic> addUserDetails(
    Map<String, dynamic>? userInfoMap,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addUserDetails,
          [
            userInfoMap,
            id,
          ],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);

  @override
  _i4.Future<_i2.QuerySnapshot<Object?>> getUserbyEmail(String? email) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserbyEmail,
          [email],
        ),
        returnValue: _i4.Future<_i2.QuerySnapshot<Object?>>.value(
            _FakeQuerySnapshot_0<Object?>(
          this,
          Invocation.method(
            #getUserbyEmail,
            [email],
          ),
        )),
      ) as _i4.Future<_i2.QuerySnapshot<Object?>>);

  @override
  _i4.Future<dynamic> addPost(
    Map<String, dynamic>? userInfoMap,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addPost,
          [
            userInfoMap,
            id,
          ],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);

  @override
  _i4.Stream<_i2.QuerySnapshot<Object?>> getPosts() => (super.noSuchMethod(
        Invocation.method(
          #getPosts,
          [],
        ),
        returnValue: _i4.Stream<_i2.QuerySnapshot<Object?>>.empty(),
      ) as _i4.Stream<_i2.QuerySnapshot<Object?>>);

  @override
  _i4.Future<dynamic> addLike(
    String? id,
    String? userid,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addLike,
          [
            id,
            userid,
          ],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);

  @override
  _i4.Future<dynamic> addComment(
    Map<String, dynamic>? userInfoMap,
    String? id,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #addComment,
          [
            userInfoMap,
            id,
          ],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);

  @override
  _i4.Stream<_i2.QuerySnapshot<Object?>> getComments(String? id) =>
      (super.noSuchMethod(
        Invocation.method(
          #getComments,
          [id],
        ),
        returnValue: _i4.Stream<_i2.QuerySnapshot<Object?>>.empty(),
      ) as _i4.Stream<_i2.QuerySnapshot<Object?>>);

  @override
  _i4.Stream<_i2.QuerySnapshot<Object?>> getPostsPlace(String? city) =>
      (super.noSuchMethod(
        Invocation.method(
          #getPostsPlace,
          [city],
        ),
        returnValue: _i4.Stream<_i2.QuerySnapshot<Object?>>.empty(),
      ) as _i4.Stream<_i2.QuerySnapshot<Object?>>);

  @override
  _i4.Future<_i2.QuerySnapshot<Object?>> search(String? updatedname) =>
      (super.noSuchMethod(
        Invocation.method(
          #search,
          [updatedname],
        ),
        returnValue: _i4.Future<_i2.QuerySnapshot<Object?>>.value(
            _FakeQuerySnapshot_0<Object?>(
          this,
          Invocation.method(
            #search,
            [updatedname],
          ),
        )),
      ) as _i4.Future<_i2.QuerySnapshot<Object?>>);

  @override
  _i4.Future<dynamic> toggleLike(
    String? postId,
    String? userId,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #toggleLike,
          [
            postId,
            userId,
          ],
        ),
        returnValue: _i4.Future<dynamic>.value(),
      ) as _i4.Future<dynamic>);

  @override
  _i4.Future<_i2.DocumentSnapshot<Object?>> getUserById(String? userId) =>
      (super.noSuchMethod(
        Invocation.method(
          #getUserById,
          [userId],
        ),
        returnValue: _i4.Future<_i2.DocumentSnapshot<Object?>>.value(
            _FakeDocumentSnapshot_1<Object?>(
          this,
          Invocation.method(
            #getUserById,
            [userId],
          ),
        )),
      ) as _i4.Future<_i2.DocumentSnapshot<Object?>>);

  @override
  _i4.Future<void> updateUserToken(
    String? userId,
    String? token,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #updateUserToken,
          [
            userId,
            token,
          ],
        ),
        returnValue: _i4.Future<void>.value(),
        returnValueForMissingStub: _i4.Future<void>.value(),
      ) as _i4.Future<void>);
}
